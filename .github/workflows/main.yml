name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [win, linux, mac]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build for ${{ matrix.platform }}
        run: npm run package-${{ matrix.platform }}

      - name: Install zip utility
        run: sudo apt-get install -y zip

      - name: Archive build artifacts
        run: |
          if [ "${{ matrix.platform }}" == "win" ]; then
            zip -r dist/Topaz-win.zip dist/Topaz-win32-x64/
          elif [ "${{ matrix.platform }}" == "linux" ]; then
            zip -r dist/Topaz-linux.zip dist/Topaz-linux-x64/
          elif [ "${{ matrix.platform }}" == "mac" ]; then
            zip -r dist/Topaz-mac.zip dist/Topaz-darwin-x64/
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows build artifacts
        uses: actions/download-artifact@v3
        with:
          name: win-build
          path: dist/

      - name: Download Linux build artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-build
          path: dist/

      - name: Download Mac build artifacts
        uses: actions/download-artifact@v3
        with:
          name: mac-build
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Topaz-win.zip
          asset_name: Topaz-win.zip
          asset_content_type: application/zip

      - name: Upload Linux release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Topaz-linux.zip
          asset_name: Topaz-linux.zip
          asset_content_type: application/zip

      - name: Upload Mac release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Topaz-mac.zip
          asset_name: Topaz-mac.zip
          asset_content_type: application/zip
